{"ast":null,"code":"/* eslint-disable no-restricted-globals */ // This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\nimport{clientsClaim}from'workbox-core';import{ExpirationPlugin}from'workbox-expiration';import{precacheAndRoute,createHandlerBoundToURL}from'workbox-precaching';import{registerRoute}from'workbox-routing';import{StaleWhileRevalidate}from'workbox-strategies';import{initializeApp}from\"firebase/app\";import{getMessaging,getToken}from\"firebase/messaging\";clientsClaim();// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nvar fileExtensionRegexp=new RegExp('/[^/?]+\\\\.[^/]+$');registerRoute(// Return false to exempt requests from being fulfilled by index.html.\nfunction(_ref){var request=_ref.request,url=_ref.url;// If this isn't a navigation, skip.\nif(request.mode!=='navigate'){return false;}// If this is a URL that starts with /_, skip.\nif(url.pathname.startsWith('/_')){return false;}// If this looks like a URL for a resource, because it contains // a file extension, skip.\nif(url.pathname.match(fileExtensionRegexp)){return false;}// Return true to signal that we want to use the handler.\nreturn true;},createHandlerBoundToURL(process.env.PUBLIC_URL+'/index.html'));// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(// Add in any other file extensions or routing criteria as needed.\nfunction(_ref2){var url=_ref2.url;return url.origin===self.location.origin&&url.pathname.endsWith('.png');},// Customize this strategy as needed, e.g., by changing to CacheFirst.\nnew StaleWhileRevalidate({cacheName:'images',plugins:[// Ensure that once this runtime cache reaches a maximum size the\n// least-recently used images are removed.\nnew ExpirationPlugin({maxEntries:50})]}));// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message',function(event){if(event.data&&event.data.type==='SKIP_WAITING'){self.skipWaiting();}});// Any other custom service worker logic can go here.\nvar firebaseApp=initializeApp({apiKey:\"AIzaSyA7OGuIcqhZ4MpqboI7a3yM9ViTbh7efak\",authDomain:\"doorlockapp-6b97f.firebaseapp.com\",databaseURL:\"https://doorlockapp-6b97f-default-rtdb.asia-southeast1.firebasedatabase.app\",projectId:\"doorlockapp-6b97f\",storageBucket:\"doorlockapp-6b97f.appspot.com\",messagingSenderId:\"378668336240\",appId:\"1:378668336240:web:3ab8ca16dcb7da5e1ba0b5\",measurementId:\"G-VFHCDJFYHS\"});var messaging=getMessaging(firebaseApp);// Get registration token. Initially this makes a network call, once retrieved\n// subsequent calls to getToken will return from cache.\ngetToken(messaging,{vapidKey:'BEell25NdsjhKC1tzHBqH_abn0Zc0-S1oenRa4amyM7BLqplmwZ4nEb3pxzoYPoTRQlqFVTjSo4WcP_Tm86Fhm4'}).then(function(currentToken){if(currentToken){console.error('token: ',currentToken);alert(currentToken);// Send the token to your server and update the UI if necessary\n// ...\n}else{// Show permission request UI\nconsole.error('No registration token available. Request permission to generate one.');messaging.requestPermission().then(function(){console.log('Notification permission granted.');// Subscribe the user to FCM messaging\nmessaging.getToken().then(function(token){console.log('FCM token:',token);// Send the token to your server to associate with the user\n});}).catch(function(err){console.log('Unable to get permission to notify.',err);});// ...\n}}).catch(function(err){console.error('An error occurred while retrieving token. ',err);// ...\n});","map":{"version":3,"names":["clientsClaim","ExpirationPlugin","precacheAndRoute","createHandlerBoundToURL","registerRoute","StaleWhileRevalidate","initializeApp","getMessaging","getToken","self","__WB_MANIFEST","fileExtensionRegexp","RegExp","_ref","request","url","mode","pathname","startsWith","match","process","env","PUBLIC_URL","_ref2","origin","location","endsWith","cacheName","plugins","maxEntries","addEventListener","event","data","type","skipWaiting","firebaseApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","vapidKey","then","currentToken","console","error","alert","requestPermission","log","token","catch","err"],"sources":["/home/harisankar/H4R1/MCA/MAIN PROJECT/IOT BASED SMART DOOR LOCK SYSTEM/CODE/pwa/src/service-worker.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from 'workbox-core';\nimport { ExpirationPlugin } from 'workbox-expiration';\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate } from 'workbox-strategies';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken } from \"firebase/messaging\";\n\nclientsClaim();\n\n// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== 'navigate') {\n      return false;\n    } // If this is a URL that starts with /_, skip.\n\n    if (url.pathname.startsWith('/_')) {\n      return false;\n    } // If this looks like a URL for a resource, because it contains // a file extension, skip.\n\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    } // Return true to signal that we want to use the handler.\n\n    return true;\n  },\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\n);\n\n// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(\n  // Add in any other file extensions or routing criteria as needed.\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'), // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new StaleWhileRevalidate({\n    cacheName: 'images',\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({ maxEntries: 50 }),\n    ],\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n\nconst firebaseApp = initializeApp({\n  apiKey: \"AIzaSyA7OGuIcqhZ4MpqboI7a3yM9ViTbh7efak\",\n  authDomain: \"doorlockapp-6b97f.firebaseapp.com\",\n  databaseURL: \"https://doorlockapp-6b97f-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"doorlockapp-6b97f\",\n  storageBucket: \"doorlockapp-6b97f.appspot.com\",\n  messagingSenderId: \"378668336240\",\n  appId: \"1:378668336240:web:3ab8ca16dcb7da5e1ba0b5\",\n  measurementId: \"G-VFHCDJFYHS\"\n});\n\nconst messaging = getMessaging(firebaseApp);\n\n// Get registration token. Initially this makes a network call, once retrieved\n// subsequent calls to getToken will return from cache.\ngetToken(messaging, { vapidKey: 'BEell25NdsjhKC1tzHBqH_abn0Zc0-S1oenRa4amyM7BLqplmwZ4nEb3pxzoYPoTRQlqFVTjSo4WcP_Tm86Fhm4' }).then((currentToken) => {\n  if (currentToken) {\n    console.error('token: ', currentToken)\n    alert(currentToken)\n    // Send the token to your server and update the UI if necessary\n    // ...\n  } else {\n    // Show permission request UI\n    console.error('No registration token available. Request permission to generate one.');\n    messaging.requestPermission().then(() => {\n      console.log('Notification permission granted.');\n      // Subscribe the user to FCM messaging\n      messaging.getToken().then((token) => {\n        console.log('FCM token:', token);\n        // Send the token to your server to associate with the user\n      });\n    }).catch((err) => {\n      console.log('Unable to get permission to notify.', err);\n    });\n    // ...\n  }\n}).catch((err) => {\n  console.error('An error occurred while retrieving token. ', err);\n  // ...\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}